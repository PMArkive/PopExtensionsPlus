#base robot_giant.pop
#base robot_standard.pop

// This is an example mission with vscript and popextensions
// Functions provided by popextensions are defined at the end of the file
WaveSchedule
{

	StartingCurrency		1200
	RespawnWaveTime 		2
	CanBotsAttackWhileInSpawnRoom 0

	Wave
	{
		// Add or replace existing InitWaveOutput with code below
		InitWaveOutput
		{
			Target bignet
			Action RunScriptCode
			Param "
				// Load popextensions script
				IncludeScript(`popextensions_main.nut`, getroottable())

				//parameters: text, prefix color, prefix text, sync with game_text true/false
				Info(@`This is an explanation text example
				|PAUSE 2
				|Explanation text can support pauses, and optionally syncing chat prints with the game_text
				|By default, text lifetime is determined by the length of the sentence
				|See DoExplanation in util.nut for more info`, 
				`FFFF66`, `Explanation: `, true)

				::ExtraItems <- {

					`Wasp Launcher`: {

						OriginalItemName = `Upgradeable TF_WEAPON_ROCKETLAUNCHER`
						Model = `models/weapons/c_models/c_wasp_launcher/c_wasp_launcher.mdl`
						`Blast radius increased` : 1.5
						`max health additive bonus` : 100
						`reloads full clip at once` : 1
						`is miniboss` : 1
						`min respawn time`: 500
						`provide on active` : 1
						`move speed bonus` : 0.4
						`rocket penetration` : 10
					}
				}

				MissionAttrs({

					EnableGlobalFixes  	 = 1
					NoReanimators 	   	 = 1
					ForceHoliday 	   	 = 2
					NoRome 			   	 = 2
					BotHeadshots 	   	 = 1
					BotsAreHumans 	   	 = 2
					WaveStartCountdown 	 = 3
					SpellRateCommon    	 = 0.5
					NoSkeleSplit 	   	 = 1
					WaveNum 		   	 = 3
					MaxWaveNum 		   	 = 60
					StandableHeads 	   	 = 1
					MultiSapper 	   	 = 1
					TeamWipeWaveLoss   	 = 1
					UnusedGiantFootsteps = 2
					GiantSentryKillCountOffset = -4

					ClassLimits = {
						[TF_CLASS_SCOUT]   = 1,      // Limit class to 1
						[TF_CLASS_SPY] 	   = 1,      // Prevent class selection
					}
					SoundOverrides = { //overrides teamplay_broadcast_audio sounds
						`Announcer.MVM_Get_To_Upgrade`: null
						`music.mvm_end_last_wave`: null
						`Game.YourTeamWon`: null
						`MVM.PlayerDied`: null
					}
					IconOverride = {

						scout = { //remove from current wave
							count = 0
							flags = MVM_CLASS_FLAG_NORMAL
						}

						pyro = { //replace with a new icon
							replace = `scout_bat`
							count = 20
							flags = MVM_CLASS_FLAG_NORMAL
							newflags = MVM_CLASS_FLAG_ALWAYSCRIT|MVM_CLASS_FLAG_MINIBOSS // see constants.nut for flags
							index = 4
						}
					}

					// AddCond = [32, 10] //speed boost for 10s

					LoadoutControl = {

						`tf_weapon_rocketlauncher_directhit`: `Wasp Launcher`, //accepts custom weapons as well
						// `Mad Milk`: `Pretty Boy's Pocket Pistol`,
						// [812] = {`tf_weapon_pistol`: 23},
						// tf_weapon_sniperrifle = null,
						[10442] = {`tf_wearable` : `Memes vs Machines Player 2019`},
						// `18, 102, 205, 658, 15006, 15014, 15129, 15130, 15150`: {`tf_weapon_minigun`: 23}
					},

					PlayerAttributes = {

						`damage bonus`: 10,
						`can breathe under water`: 1,
						`mult swim speed`: 3,
						`crit when health below`: 75,
						`last shot crits`: 0.2,
						`mult dmg vs same class`: 2,
						`reloads full clip at once`: 1,
						`passive reload`: 1,
						`max health additive bonus` : 100,

						[TF_CLASS_SCOUT] = {
							`damage bonus` : 5,
							`fire rate penalty` : 2,
							`max health additive bonus` : 100,
							`replace weapon fire sound`: [ [`Weapon_Soda_Popper.Single`, `Weapon_Soda_Popper.SingleCrit`], [`weapons/flaregun/fire.wav`, `Weapon_CowMangler.Single`] ],
						},

						[TF_CLASS_SOLDIER] = {
							`damage penalty` : 0.5,
							`fire rate bonus` : 0.5,
							`mult dmg vs same class`: 10
							`replace weapon fire sound`: [ [`Weapon_Liberty_Launcher.Single`, `Weapon_Liberty_Launcher.SingleCrit`], [`weapons/flaregun/fire.wav`, `Weapon_CowMangler.Single`] ],
						},
					},
					ItemAttributes = {
						`Memes vs Machines Player 2019` : {
							// `set item tint RGB`: 3555399,
							`set item tint RGB`: 4669494,
							`set item tint RGB 2`: 4079424,
							`item style override`: 1,
						}
						`Madness vs Machines Pinnacle of Ingenuity 2019`: {
							`set item tint RGB`: 16738816,

						}
					}
				})
			"
		}
		StartWaveOutput
		{
			Target wave_start_relay
			Action Trigger
		}
		DoneOutput
		{
			Target wave_finished_relay
			Action trigger
		}
		WaveSpawn
		{
			Name "Wave1"
			ClosestPoint spawnbot
			TotalCount 10
			MaxActive 5
			SpawnCount 5
			WaitBeforeStarting 1
			TotalCurrency 200
			TFBot
			{
				Attributes IgnoreFlag
				// Attributes IgnoreEnemies
				BehaviorModifiers Push
				Attributes DisableDodge
				Tag "popext_forceromevision"
				Tag "popext_addcond{cond = 32, duration = 10}"
				Tag "popext_alwaysglow"
				// remove 2 scout_bats per death, positive values will add icons on death
				Tag "popext_iconoverride{
					icon = `scout_bat`
					count = 1
				}"
				Tag "popext_actionpoint{
						target = `-648 4802 234`
						repeats = 5
						duration = 1
						distance = 100
						waituntildone = true
						repeat_cooldown = 10
						killaimtarget = 2048
						aimtarget = `RandomEnemy`
				}"
				// Tag "popext_improvedairblast"
				// Tag "popext_usehumananims"
				Tag "popext_spell{type = SPELL_SKELETON, cooldown = 5, charges = 5}"
				Tag "popext_ringoffire{damage = 20, interval = 2}"
				// Tag "popext_meleeai"
				// Tag "popext_reprogrammed"
				Class Pyro
				Skill Hard
				// Item "The Thermal Thruster"
				// Item "Fancy Spellbook"
				// Attributes IgnoreEnemies
				// WeaponRestrictions SecondaryOnly
				// ItemAttributes {
					// ItemName "TF_WEAPON_FLAMETHROWER"
					// "fire particle blue" "flamethrower_underwater" // client crash
				// }
				// CharacterAttributes
				// {
					// "damage bonus" -10
				// }
			}
		}
		WaveSpawn
		{

			Name "Wave1a"
			Where spawnbot
			TotalCount 9999
			MaxActive 1
			SpawnCount 1
			WaitBeforeStarting 0
			WaitBetweenSpawns 5
			TFBot
			{
				Template T_TFBot_Giant_Soldier
				Attributes HoldFireUntilFullReload // now works with every clip-based weapon with EnableGlobalFixes mission attribute
				// Attributes IgnoreFlag
				Item "The Cow Mangler 5000"
				Tag "popext_homingprojectile{turn_power = 0.5, speed_mult = 1.0}"
				Tag "popext_customweaponmodel{model = `models/weapons/c_models/c_wasp_launcher/c_wasp_launcher.mdl`}"
				// Tag "popext_reprogrammed"
				Tag "popext_usehumanmodel"
				// Tag "popext_meleeai"
				Tag "popext_spawnhere{where = `-779.491150 3302.379883 312.992340`, spawn_uber_duration = 3}" //custom spawn origin
				Tag "popext_customattr{attr = `wet immunity`, value = 1}"
				Tag "popext_weaponresist{weapon = ID_IRON_CURTAIN, amount = 20}" //20x damage from iron curtain
				// Tag "popext_weaponresist{type = 298, amount = 20}"
				// Tag "popext_setskin|0" //red skin
				// Tag "popext_setskin{skin = 0}"
				// Tag "popext_mobber"
				// Tag "popext_fireweapon|2048"
				Tag "popext_rocketcustomtrail{name = `eyeboss_projectile`}"
			}
		}
		WaveSpawn
		{

			Name "Wave1a"
			Where spawnbot
			TotalCount 9999
			MaxActive 1
			SpawnCount 1
			WaitBetweenSpawns 9999
			WaitBeforeStarting 9999
			TFBot
			{
				Class Scout
				// Attributes UseBossHealthBar
				Health 400
				// Tag "popext_halloweenboss|eyeball_boss|3000|752 4529 389|60"
				// CharacterAttributes
				// {
					// "move speed bonus" 0.2
				// }
			}
		}
	}
	Wave
	{
		InitWaveOutput
        {
            Target bignet
            Action RunScriptCode
            Param "

                IncludeScript(`popextensions_main`, getroottable())

                MissionAttrs({

                    WaveStartCountdown = 1
                    // `ExtraTankPath`: [
					// 	[`686 4000 392`, `667 4358 390`, `378 4515 366`, `-193 4250 289`],
					// 	[`640 5404 350`, Vector(640, 4810, 350), `640 4400 550`, `1100 4100 650`, `1636 3900 770`]
					// ]
					ExtraTankPath = {

						name = `mytankpath`
						tracks = [

							[`686 4000 392`, `667 4358 390`, `378 4515 366`, `-193 4250 289`],
							[`640 5404 350`, Vector(640, 4810, 350), `640 4400 550`, `1100 4100 650`, `1636 3900 770`]
						]
					}

					SoundOverrides = { //overrides teamplay_broadcast_audio sounds
						`Game.YourTeamWon`: 			null
						`music.mvm_end_last_wave`: 		null
						`Announcer.MVM_Get_To_Upgrade`: null
					}
                })

                PopExt.CustomTank(`abc*`, {

                    Scale = `0.5`
                    DisableSmoke = true
					NoDeathFX = 2

                    function OnSpawn(tank, name) {

                        local prop = SpawnEntityFromTable(`prop_dynamic`, {model = `models/props_badlands/barrel01.mdl`, origin = `0 0 79`})
                        local trigger = SpawnEntityFromTable(`trigger_ignite`, {origin = `0 0 100`, spawnflags = `1`})

                        trigger.SetSize(Vector(-175,-175,-175), Vector(175,175,175))
                        PopExtUtil.SetParentLocalOrigin([prop, trigger], tank)

                        tank.KeyValueFromString(`rendercolor`, `255 0 0`)
                    }
                })

                PopExt.CustomTank(`tank2`, {

                    IsBlimp = true
					Icon = `blimp2_lite`
					StartTrack = `extratankpath2_1` //this is only required for blimps so the func_tracktrain knows where to go
					CritImmune = true
					NoScreenShake = true
					CrushDamageMult = 0
					Team = 2

					SoundOverrides = {

						Ping = `npc/combine_gunship/ping_search.wav`
						Start = `ui/chime_rd_2base_pos.wav`
						EngineLoop = `npc/combine_gunship/dropship_engine_distant_loop1.wav`
						Destroy = `ui/chime_rd_2base_neg.wav`
						Deploy = `ui/chime_rd_2base_neg.wav`
					}
					// SpawnTemplate = `templateName`
                })
				// create a point_viewcontrol with custom ent_additions spawnflags
				// ::PointTemplates <- {

				// 	viewcontrol = {

				// 		[0] = {

				// 			point_viewcontrol = {

				// 				targetname = `viewcontrol_example`
				// 				spawnflags = 768 //custom spawnflags to fix viewcontrol + enable for all players
				// 				vscripts = `popextensions/ent_additions`
				// 				origin = `32 4892 659`
				// 				angles = `23 -47 0`
				// 			}
				// 		}
				// 	}
				// }
            "
		}
		StartWaveOutput
		{
			Target bignet
			Action RunScriptCode
			Param "
				EntFire(`wave_start_relay`, `Trigger`)

				SpawnTemplate(`viewcontrol`)

				// the name ends with 1 due to name fixup, set NoFixup 1 in 'viewcontrol' to disable this
				EntFire(`viewcontrol_example1`, `Enable`, 1)
				EntFire(`viewcontrol_example1`, `Disable`, 3)
			"
		}
		DoneOutput
		{
			Target wave_finished_relay
			Action trigger
		}
        WaveSpawn
        {
            Name "Wave2a"
            TotalCount 1
            TotalCurrency 0
            Tank
            {
                Health 100
                Speed 75
                Name "abcd"
                StartingPathTrackNode "extratankpath1_1"

                OnBombDroppedOutput
                {
                    Target boss_deploy_relay
                    Action Trigger
                }
            }
        }
        WaveSpawn
        {
            Name "Wave2b"
            TotalCount 1
            TotalCurrency 0
			WaitForAllDead "Wave2a"
            Tank
            {
                Health 100
                Speed 70
                Name "tank2"
                Skin 0
                StartingPathTrackNode "extratankpath2_1"

                OnBombDroppedOutput
                {
                    Target boss_deploy_relay
                    Action Trigger
                }
            }
        }
	}

	Wave
	{
		InitWaveOutput
		{
			Target bignet
			Action RunScriptCode
			Param "
				IncludeScript(`popextensions_main`, getroottable())

				// Besides loading your 'point templates' from a separate pointtemplates.nut file,
				// you can also add them on the fly

				if(!(`PointTemplates` in getroottable()))
					::PointTemplates <- {}

				PointTemplates.SampleTemplateName <- {
					NoFixup = 1, //Name fix-up behaves somewhat similarly to point_template name fix-up, appending a unique number to the end of the targetname to separate identical templates.  Set NoFixup 1 to disable this behavior
					[0] = { //first entity to spawn in the template
							item_teamflag = { //entity classnames here
									targetname = `example_flag`
									origin = `0 0 0`
									angles = `0 0 0`
									//other item_teamflag key/values go in here
							}
					},
					[1] = { //second entity to spawn in the template
							prop_dynamic = {
									targetname = `example_barrel`
									parentname = `example_flag` //parent a barrel prop to the flag
									model = `models/props_badlands/barrel01.mdl`
							}
					}
				}
				PointTemplates.Sentry <- {
					KeepAlive = 1, //Dont remove entities after their spawner had been killed
					RemoveIfKilled = `sentry`, // Remove all entities in template if the specified entity is killed
					[0] = {
							OnSpawnOutput = { //Parent entity is the !activator. Set builder to parent entity
								Target = `sentry` //targetname of an entity added below
								Action = `setbuilder`
								Delay = 0.2
							}
					},
					[1] = {
							OnParentKilledOutput = { //kill players after the carrier was dead
								Target = `player`
								Action =`sethealth`
								Delay = 0.00
								Param = 1
							}
					},
					[2] = {
							prop_dynamic = { //Entity classname
								model = `models/props_coalmines/wood_fence_short_128.mdl` //keyvalue
								solid = 0 //Physics collision model (0- No collision, 1 - BSP, 2 - Bounding box, 3 - Oriented bounding box, 6 - VPhysics)=
							}
					},
					[3] = {
							obj_sentrygun = {
								targetname = `sentry` //Entity name. Required if the entity is going to be referenced somewhere
								origin = `0 0 0`
								teamnum = 3 // 2 - Red team, 3 - Blu team
								SolidToPlayer = 0
							}
					}
				}

			"
		}

		StartWaveOutput
		{
			// if you have templates that you want to spawn on wave start, replace the StartWaveOutput trigger with RunScriptCode
			Target bignet
			Action RunScriptCode
			Param "
				// The original StartWaveOutput trigger, change if necessary
				EntFire(`wave_start_relay`, `Trigger`)

				// SpawnTemplate's args: (string pointtemplatename, handle parent = null, origin = '', angles = '')
				// origin/angles will also accept Vectors/QAngles
				// calling SpawnTemplate here will spawn when the wave starts
				SpawnTemplate(`Sentry`, null, `0 -800 500`)

			"
		}

		DoneOutput
		{
			Target wave_finished_relay
			Action trigger
		}

		WaveSpawn
		{
			Name "Wave3"
			Where spawnbot
			TotalCount 2
			MaxActive 2
			SpawnCount 2
			WaitBeforeStarting 1
			WaitBetweenSpawns 5
			TotalCurrency 5000
			TFBot
			{
				Template T_TFBot_Giant_Soldier
				Attributes HoldFireUntilFullReload //now works with every clip-based weapon
				Item "The Cow Mangler 5000"
				Tag "popext_spawntemplate{template = `Sentry`, attachment = `head`}" // spawns the template with the bot as its parent
			}
		}

	}
	Wave
	{
		// Add or replace existing InitWaveOutput with code below
		InitWaveOutput
		{
			Target bignet
			Action RunScriptCode
			Param "
				// The original InitWaveOutput trigger, change if necessary
				EntFire(`wave_init_relay`, `Trigger`)

				// Load popextensions script
				IncludeScript(`popextensions`)

				// If you are hitting the 4096 character limit inside this script, it would be required to put hooks into separate file
				// IncludeScript(`mypophooks`)
				// Add event hooks for bots with specifed Tag.
				AddRobotTag(`abc`, {
					// Called when the robot is spawned
					OnSpawn = function(bot, tag) {
						ClientPrint(null, 2, `OnSpawn`)
						bot.KeyValueFromString(`rendercolor`, `0 255 0`)

						// Put a barrel prop on bots head
						CreatePlayerWearable(bot, `models/props_farm/wooden_barrel.mdl`, false, `head`)
					},
					// Called when the robot is killed
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#mvm_tank_destroyed_by_players:~:text=they%20changed%20to-,player_death,-Note%3A%20When
					// Params may be null if the bot was forcefully changed to spectator team
					OnDeath = function(bot, params) {
						ClientPrint(null, 2, `OnDeath`)
						if (params != null) {
							PrintTable(params)
						}
						ClientPrint(null, 2, `Restore color`)
						// Restore colors back to normal as necessary
						bot.KeyValueFromString(`rendercolor`, `255 255 255`)
					},
					// Called when the robot is kills someone
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#mvm_tank_destroyed_by_players:~:text=they%20changed%20to-,player_death,-Note%3A%20When
					OnKill = function(bot, params) {
						ClientPrint(null, 2, `OnKill`)
						PrintTable(params)
					},
					// Called when the robot takes damage
					// Non const prefixed params when altered will affect the damage taken
					// Params as in https://developer.valvesoftware.com/wiki/List_of_TF2_Script_Functions#:~:text=Description-,const_entity,-handle
					OnTakeDamage = function(bot, params) {
						ClientPrint(null, 2, `OnTakeDamage`)
						PrintTable(params)
					},
					// Called when the robot takes damage, after the damage is dealt
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#player_hurt:~:text=type-,player_hurt,-Note%3A%20When
					OnTakeDamagePost = function(bot, params) {
						ClientPrint(null, 2, `OnTakeDamagePost`)
						PrintTable(params)
					},
					// Called when the robot deals damage
					// Non const prefixed params when altered will affect the damage taken
					// Params as in https://developer.valvesoftware.com/wiki/List_of_TF2_Script_Functions#:~:text=Description-,const_entity,-handle
					OnDealDamage = function(bot, params) {
						ClientPrint(null, 2, `OnDealDamage`)
						PrintTable(params)
					},
					// Called when the robot deals damage, after the damage is dealt
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#player_hurt:~:text=type-,player_hurt,-Note%3A%20When
					OnDealDamagePost = function(bot, params) {
						ClientPrint(null, 2, `OnDealDamagePost`)
						PrintTable(params)
					},
				})
			"
		}
		StartWaveOutput
		{
			Target wave_start_relay
			Action Trigger
		}
		DoneOutput
		{
			Target wave_finished_relay
			Action trigger
		}
		WaveSpawn
		{

			Name "Wave1"
			Where spawnbot
			TotalCount 19
			MaxActive 19
			SpawnCount 19
			WaitBeforeStarting 3
			WaitBetweenSpawns 5
			TotalCurrency 200
			TFBot
			{
				Tag abc
				Class Soldier
				WeaponRestrictions MeleeOnly
			}
		}
	}
	Wave
	{
		// Add or replace existing InitWaveOutput with code below
		InitWaveOutput
		{
			Target gamerules // gamerules or tf_gamerules, depending on the map
			Action RunScriptCode
			Param "
				// The original InitWaveOutput trigger, change if necessary
				EntFire(`wave_init_relay`, `Trigger`)

				// Load popextensions script
				IncludeScript(`popextensions`)

				// ALERT! The function below will crash linux servers, remove if the mission is played on them
				// Add custom tank icon, uses crit outline and white background
				AddCustomTankIcon(`tank_sticky_hellmet`, 3, true, false, false, false)

				// Add event hooks for tanks with specifed Name, also supports wildcard suffix
				AddTankName(`abc*`, {
					// Use custom tank icon
					Icon = { name = `tank_sticky_hellmet`, isCrit = true, isBoss = false},

					// Use custom tank model, can be either a string or a table of strings
					// TankModel = `models/bots/boss_bot/boss_blimp.mdl`,
					TankModel = {
						Default = `models/bots/boss_bot/boss_blimp.mdl`,
						Damage1 = `models/bots/boss_bot/boss_blimp_damage1.mdl`,
						Damage2 = `models/bots/boss_bot/boss_blimp_damage2.mdl`,
						Damage3 = `models/bots/boss_bot/boss_blimp_damage3.mdl`,
						LeftTrack = `models/bots/boss_bot/tankred_track_l.mdl`,
						RightTrack = `models/bots/boss_bot/tankred_track_r.mdl`,
						Bomb = `models/bots/boss_bot/bombblue_mechanism.mdl`,
					}
					DisableTracks = true, // Disable track models
					DisableBomb = true, // Disable bomb model
					// Called when the tank is spawned
					OnSpawn = function(tank, name) {
						// Create a prop on top of the tank
						local prop = SpawnEntityFromTable(`prop_dynamic`, {model = `models/props_badlands/barrel01.mdl`, origin = `0 0 200`})

						// Create an ignite trigger
						local trigger = SpawnEntityFromTable(`trigger_ignite`, {origin = `0 0 100`, spawnflags = `1`})
						SetupTriggerBounds(trigger, Vector(-200,-200,-200), Vector(200,200,200))
						SetParentLocalOrigin([prop, trigger], tank)

						ClientPrint(null, 2, `OnSpawnTank`)
						tank.KeyValueFromString(`rendercolor`, `255 0 0`)
					},
					// Called when the tank is destroyed
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#player_hurt:~:text=level-,npc_hurt,-Name%3A
					OnDeath = function(tank, params) {
						ClientPrint(null, 2, `OnDeathTank`)
						PrintTable(params)
					},
					// Called when the tank takes damage
					// Non const prefixed params when altered will affect the damage taken
					// Params as in https://developer.valvesoftware.com/wiki/List_of_TF2_Script_Functions#:~:text=Description-,const_entity,-handle
					OnTakeDamage = function(tank, params) {
						ClientPrint(null, 2, `OnTakeDamageTank`)
						PrintTable(params)
					},
					// Called when the tank takes damage, after the damage is dealt
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#player_hurt:~:text=level-,npc_hurt,-Name%3A
					OnTakeDamagePost = function(tank, params) {
						ClientPrint(null, 2, `OnTakeDamagePostTank`)
						PrintTable(params)
					},
				})
			"
		}

		WaveSpawn
		{
			Name "Wave2"
			TotalCount 3
			TotalCurrency 0

			FirstSpawnOutput
			{
				Target boss_spawn_relay
				Action Trigger
			}

			Tank
			{
				Health 100
				Speed 75
				Name "abc"
				StartingPathTrackNode "boss_path_a1"

				OnKilledOutput
				{
					Target boss_dead_relay
					Action Trigger
				}

				OnBombDroppedOutput
				{
					Target boss_deploy_relay
					Action Trigger
				}
			}
		}
	}
}


// Functions provided by popextensions:

// Sets parent immediately in a dirty way. Does not retain absolute origin, retains local origin instead
// child parameter may also be an array of entities
// void SetParentLocalOrigin(handle|array child, handle parent, string attachment = null)

// Make a wearable prop that is attached to the player. The wearable is automatically removed when the owner is killed or respawned
// handle CreatePlayerWearable(handle player, string model, bool bonemerge = true, string attachment = null, bool autoDestroy = true)

// Setup collision bounds of a trigger entity
// handle SetupTriggerBounds(handle trigger, Vector mins = null, Vector maxs = null)

// Prints a table to client console
// void PrintTable(table|array table)

// Adds hooks to robots with specified Tag
// void AddRobotTag(string tag, table hooks)

// Adds hooks to tanks with specified Name. Wildcard * suffix is supported
// void AddTankName(string name, table hooks)

// ALERT! Functions that change wavebar icons will crash linux servers!
// Add custom tank icon to the wavebar, should be called in WaveInitOutput
// void AddCustomTankIcon(string name, int count, bool isCrit = false, bool isBoss = true, bool isSupport = false, bool isSupportLimited = false)

// Add custom icon to the wavebar, should be called in WaveInitOutput
// void AddCustomIcon(string name, int count, bool isCrit = false, bool isBoss = false, bool isSupport = false, bool isSupportLimited = false)

// If you want to use IncrementWaveIconSpawnCount functions to add icons to the wavebar, use this function
// void SetWaveIconsFunction(function func)

// Flags for use in wavebar functions below. Joinable with | operator
// MVM_CLASS_FLAG_NONE 				0;
// MVM_CLASS_FLAG_NORMAL 			1 << 0; // Non support or mission icon
// MVM_CLASS_FLAG_SUPPORT 			1 << 1; // Support icon flag. Mission icon does not have this flag
// MVM_CLASS_FLAG_MISSION 			1 << 2; // Mission icon flag. Support icon does not have this flag
// MVM_CLASS_FLAG_MINIBOSS 			1 << 3; // Giant icon flag. Support and mission icons do not display red background when set
// MVM_CLASS_FLAG_ALWAYSCRIT 		1 << 4; // Crit icon flag. Support and mission icons do not display crit outline when set
// MVM_CLASS_FLAG_SUPPORT_LIMITED 	1 << 5; // Support limited flag. Game uses it together with support flag

// Get wavebar spawn count of an icon with specified name and flags
// int GetWaveIconSpawnCount(string name, int flags)

// Set wavebar spawn count of an icon with specified name and flags
// If count is set to 0, removes the icon from the wavebar
// Can be used to put custom icons on a wavebar
// void SetWaveIconSpawnCount(string name, int flags, int count = 1, bool changeMaxEnemyCount = true)

// Increment wavebar spawn count of an icon with specified name and flags
// Can be used to put custom icons on a wavebar
// void IncrementWaveIconSpawnCount(string name, int flags, int count = 1, bool changeMaxEnemyCount = true)

// Increment wavebar spawn count of an icon with specified name and flags
// Use it to decrement the spawn count when the enemy is killed. Should not be used for support type icons
// void DecrementWaveIconSpawnCount(string name, int flags, int count = 1, bool changeMaxEnemyCount = false)

// Used for mission and support limited bots to display them on a wavebar during the wave, set by the game automatically when an enemy with this icon spawn
// void SetWaveIconActive(string name, int flags, bool active)

// Used for mission and support limited bots to display them on a wavebar during the wave, set by the game automatically when an enemy with this icon spawn
// bool GetWaveIconActive(string name, int flags)
